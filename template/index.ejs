<!DOCTYPE html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>小米供应链金融</title>
    <style>
      #ie-tip{
        display: none;
        height: 100%;
        width: 100%;
        background: url(https://cnbj3-fusion.fds.api.xiaomi.com/scf/static_resources/1561114255108/1882117405.jpg) #fff no-repeat center center; POSITION: fixed; Z-INDEX: 100
      }
    </style>
    <script>
      if (!Function.prototype.bind) {
        Function.prototype.bind = function(oThis) {
          if (typeof this !== 'function') {
            // closest thing possible to the ECMAScript 5
            // internal IsCallable function
            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');
          }
  
          var aArgs   = Array.prototype.slice.call(arguments, 1),
              fToBind = this,
              fNOP    = function() {},
              fBound  = function() {
                // this instanceof fBound === true时,说明返回的fBound被当做new的构造函数调用
                return fToBind.apply(this instanceof fBound
                      ? this
                      : oThis,
                      // 获取调用时(fBound)的传参.bind 返回的函数入参往往是这么传递的
                      aArgs.concat(Array.prototype.slice.call(arguments)));
              };
  
          // 维护原型关系
          if (this.prototype) {
            // Function.prototype doesn't have a prototype property
            fNOP.prototype = this.prototype; 
          }
          // 下行的代码使fBound.prototype是fNOP的实例,因此
          // 返回的fBound若作为new的构造函数,new生成的新对象作为this传入fBound,新对象的__proto__就是fNOP的实例
          fBound.prototype = new fNOP();
  
          return fBound;
        };
      }
    </script>
    <script>
      (function () {
        var lastTime = 0;
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
            window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
            window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||
                window[vendors[x] + 'CancelRequestAnimationFrame'];
        }

        if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = function (callback, element) {
                var currTime = new Date().getTime();
                var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                var id = window.setTimeout(function () { callback(currTime + timeToCall); },
                    timeToCall);
                lastTime = currTime + timeToCall;
                return id;
            };
        }

        if (!window.cancelAnimationFrame) {
            window.cancelAnimationFrame = function (id) {
                clearTimeout(id);
            };
        }
      }());
    </script>
  </head>
  <body>
    <div id="app"></div>
    <div id="ie-tip"></div>
    <script>
      var DEFAULT_VERSION = 8.0;  
      var ua = navigator.userAgent.toLowerCase();  
      var isIE = ua.indexOf("msie")>-1;  
      var safariVersion;  
      if(isIE){  
      safariVersion =  ua.match(/msie ([\d.]+)/)[1];  
      }  
      if(safariVersion <= DEFAULT_VERSION ){  
        document.getElementById('app').style.display="none";
        document.getElementById('ie-tip').style.display="block";
      }; 

    </script>
  </body>
</html>
